name: Run pr agent on every opened issue, respond to user comments on an issue

#When the action is triggered
on:
  issues:
    types: [opened] #New issue
  issue_comment:
    types: [created] #Comment either on issue or on pull-request

# The actual set of actions
jobs:
  dump: #For debugging
    runs-on: ubuntu-latest
    steps:
    - name: $github
      run:   echo "$GITHUB_CONTEXT"
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}

  issue_agent:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]' && !endsWith(github.actor, '[bot]') }} #Do not run any of the commands if trigger was a bot.

    # Set required permissions
    permissions:
      contents: read    # For reading repository contents
      issues: write     # For commenting on issues

    # Read env. variables
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_API_URL: ${{ github.api_url }}
      ISSUE_URL: ${{ github.event.issue.html_url || github.event.comment.html_url }}
      ISSUE_BODY: ${{ github.event.issue.body || github.event.comment.body }}
      OPENAI_KEY: ${{ secrets.OPENAI_KEY }}

    steps:
      - name: Run PR Agent on Issues
        if: ${{ env.ISSUE__URL != '' }}
        uses: docker://codiumai/pr-agent:latest
        with:
          entrypoint: /bin/bash #Replace invoking cli.py directly with a shell
          args: |
            -c "cd /app && \
            echo 'Running Issue Agent action step' && \
            echo 'ISSUE_URL=$ISSUE_URL' && \
            export config__git_provider='github' && \
            export github__token=$GITHUB_TOKEN && \
            export github__api_url=$GITHUB_API_URL && \
            export github__graphql_url=$GITHUB_GRAPHQL_URL && \
            export openai__key=$OPENAI_KEY && \
            python -m pr_agent.cli --issue_url='$ISSUE_URL' help_docs '$ISSUE_BODY'"

