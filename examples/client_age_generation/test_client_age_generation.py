# Generated by CodiumAI
from examples.client_age_generation.client_age_generation import get_client_age_generation_py


import pytest

class TestGetClientAgeGenerationPy:

    # Returns {'gen': 'Gen.Z', 'set': True} when client age is 18 or less
    def test_client_age_under_18(self):
        client = {'age': 8}
        expected_res = {'gen': 'Gen.Z', 'set': True}
        assert get_client_age_generation_py(client) == expected_res

    # Returns {'gen': 'Gen.Y', 'set': True} when client age is between 18 and 34
    def test_client_age_between_18_and_34(self):
        client = {'age': 25}
        expected_res = {'gen': 'Gen.Y', 'set': True}
        assert get_client_age_generation_py(client) == expected_res

    # Returns {'gen': 'Gen.X', 'set': True} when client age is greater than 34
    def test_client_age_greater_than_34(self):
        client = {'age': 40}
        expected_res = {'gen': 'Gen.X', 'set': True}
        assert get_client_age_generation_py(client) == expected_res

    # Returns {'set': False} when client age is None
    def test_client_age_none(self):
        client = {'age': None}
        expected_res = {'set': False}
        assert get_client_age_generation_py(client) == expected_res

    # Returns {'set': False} when client age is negative
    def test_client_age_negative(self):
        client = {'age': -10}
        expected_res = {'set': False}
        assert get_client_age_generation_py(client) == expected_res

    # Returns {'gen': 'Gen.Z', 'set': True} when client age is 0
    def test_client_age_zero(self):
        client = {'age': 0}
        expected_res = {'gen': 'Gen.Z', 'set': True}
        assert get_client_age_generation_py(client) == expected_res
